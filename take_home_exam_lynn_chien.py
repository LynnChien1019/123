# -*- coding: utf-8 -*-
"""Take home exam_Lynn Chien

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XcDg6D0BRgQ61RTcg_6_BhgCoj62wRqb

##第一題：內政部不動產時價登錄網
"""

import pandas as pd

#讀取csv檔
df_a = pd.read_csv('a_lvr_land_a.csv')  
df_b = pd.read_csv('b_lvr_land_a.csv') 
df_e = pd.read_csv('e_lvr_land_a.csv') 
df_f = pd.read_csv('f_lvr_land_a.csv') 
df_h = pd.read_csv('h_lvr_land_a.csv')

#讀進來就是DataFrame
type(df_a)

type(df_b)

type(df_e)

type(df_f)

type(df_h)

#確認欄位型態
df_a.info()

df_b.info()

df_e.info()

df_f.info()

df_h.info()

#讀取前五筆,發現第一筆為英文欄位
df_a.head()

#從第二筆開始取到最後一筆
df_a = df_a.iloc[1:]
df_a.head()

df_b = df_b.iloc[1:]
df_e = df_e.iloc[1:]
df_f = df_f.iloc[1:]
df_h = df_h.iloc[1:]

#檢查遺失值
#主要用途和總樓層數都有遺失值
df_a.isna().sum()

df_a.isna().sum().sum()

#將五個物件垂直合併
df_all = pd.concat([df_a,df_b,df_e,df_f,df_h], ignore_index=True) # ignore index
df_all

# 針對總樓層數distinct
df_all['總樓層數'].unique()

# 針對總樓層數建立對應的字典
dict1 = {
    '一層':1,
    '二層':2,
    '三層':3,
    '四層':4,
    '五層':5,
    '六層':6,
    '七層':7,
    '八層':8,
    '九層':9,
    '十層':10,
    '十一層':11,
    '十二層':12,
    '十三層':13,
    '十四層':14,
    '十五層':15,
    '十六層':16,
    '十七層':17,
    '十八層':18,
    '十九層':19,
    '二十層':20,
    '二十一層':21,
    '二十二層':22,
    '二十三層':23,
    '二十四層':24,
    '二十五層':25,
    '二十六層':26,
    '二十七層':27,
    '二十八層':28,
    '二十九層':29,
    '三十層':30,
    '三十二層':32,
    '三十三層':33,
    '三十五層':35,
    '三十八層':38,
    '三十九層':39,
    '四十二層':42,
    '四十三層':43,
    '六十八層':68,
    '八十五層':85
}
dict1

#將總樓層數以dic1的value儲存
df_all['總樓層數'] = df_all['總樓層數'].map(dict1)
df_all

df_all['總樓層數']

"""## filter_a.csv"""

#【主要用途】為【住家用】且【建物型態】為【住宅大樓】且【總樓層數】需【大於等於十三層】
filter_a = df_all[(df_all['主要用途'] == '住家用') & (df_all['建物型態'] == '住宅大樓(11層含以上有電梯)') & (df_all['總樓層數'] >=13)]

filter_a

filter_a.to_csv(r'filter_a.csv', index = False)

"""## filter_b.csv"""

df_all.info()

df_all

len(df_all.index)

# 發現車位數在交易筆棟數的最後一個位置
df_all['交易筆棟數']

# 建立車位數欄位
df_all['車位數'] = df_all['交易筆棟數'].apply(lambda x:x[-1]).astype(int)

df_all['車位數']

df_all.info()

# 確認車位數欄位均為數值
df_all['車位數'].unique()

#車位總價元欄位需先轉為整數型態才可取平均
#總價元欄位需先轉為整數型態才可取平均
filter_b = pd.DataFrame({
    '總件數':len(df_all.index),
    '總車位數':df_all['車位數'].sum(),
    '平均總價元':df_all['總價元'].astype(int).mean(),
    '平均車位總價元':df_all['車位總價元'].astype(int).mean()
},index = [0])

filter_b

# 輸出csv
filter_b.to_csv(r'filter_b.csv', index = False)

"""##第二題：591 房屋交易租屋網"""

from bs4 import BeautifulSoup
import requests

response = requests.get(
    "https://rent.591.com.tw/?kind=0&region=1")
soup = BeautifulSoup(response.text, "html.parser")
print(soup.prettify())  #輸出排版後的HTML內容

result = soup.find_all("h3", itemprop="headline", limit=3)
print(result)

class House:
    #建構式
    def __init__(self,name):
        self.qa = {
             '台北市':1,
             '新北市':2
        }
        self.name = name
        print(self.name)
 
    #爬取
    def scrape(self, search):
        number = str(self.qa.get(search))
        response = "https://rent.591.com.tw/?kind=0&region="+number
        print(response)

h = House('taipei_city')  #建立taipei物件

h.scrape('台北市')

h.scrape('新北市')

qa = {'台北市':1,'新北市':2}

for i in qa:
  print(i)

str(qa.get('台北市'))